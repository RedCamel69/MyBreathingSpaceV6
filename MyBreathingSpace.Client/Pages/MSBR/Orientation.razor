@page "/mbsr/orientation"
@layout SecondaryLayout

@inject IJSRuntime JS
@implements IDisposable


<PageTitle>mbsr</PageTitle>

<!-- ======= Orientation Section ======= -->
<section id="msbr-title" class="" data-bs-spy="scroll" tabindex="0" style="background-color:white; padding-top:130px">
    <div class="container">

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item"><a href="mbsr#orientation">MSBR Overview</a></li>
                <li class="breadcrumb-item active" aria-current="page">Orientation</li>
            </ol>
        </nav>

        <div class="section-title">
            <h1 class="display-1">Orientation</h1>
        </div>

        <div class="row content">
            <div class="col-lg-12">
                <p>
                    <u>The Orientation session is designed to:</u>
                </p>
                <p>
                    <ul class="list-group">
                        <li class="list-group-item">Familiarise potential participants with what MBSR is and what it is not.</li>
                        <li class="list-group-item">Provide participants with an experience of mindfulness in an atmosphere of trust and non-judgmental awareness and exchange.</li>
                        <li class="list-group-item"> Discover if the MBSR is a good match for participants’ needs.</li>
                        <li class="list-group-item">Elicit active participation in the programme, including a commitment to attend the sessions and engaging in formal and informal mindful practice at home.</li>
                    </ul>
                </p>
            </div>
        </div>


        <div class="row content">
            <div class="col-lg-12">
                <p>The session will include:</p>
                <p>
                    <ul class="list-group">
                        <li class="list-group-item">A brief history of the MBSR course.</li>
                        <li class="list-group-item">An introduction to Mindfulness.</li>
                        <li class="list-group-item">Engagement in a brief mindful meditation practice.</li>
                        <li class="list-group-item">Introductions to other members of the group, and sharing of experiences.</li>
                        <li class="list-group-item">Sharing programme procedures, and an introduction to course logistics.</li>
                        <li class="list-group-item">An individual interview with myself.</li>
                        <li class="list-group-item">Answering any questions.</li>
                    </ul>
                </p>
            </div>
        </div>

    </div>
</section>


@code {

    private IJSObjectReference? _jsModule;


    private List<String> OrientationObjectives = new List<String>() {
        "Familiarise potential participants with what MBSR is and what it is not.",
        "Provide participants with an experience of mindfulness in an atmosphere of trust and non-judgmental awareness and exchange.",
                "Discover if the MBSR is a good match for participants’ needs.",
        "Elicit active participation in the programme, including a commitment to attend the sessions and engaging in formal and informal mindful practice at home."
    };

    private List<String> OrientationObjectives2 = new List<String>() {
        "A brief history of the MBSR course.",
        "Engagement in a brief mindful meditation practice.",
         "Introductions to other members of the group, and sharing of experiences.",
        "Sharing programme procedures, and an introduction to course logistics.",
        "An individual interview with myself.",
        "Answering any questions."
    };

    protected override async Task OnInitializedAsync()
    {
        _jsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/main.js");

        if (_jsModule != null)
        {
            AttachScrollListener();
        }
    }

    async Task GoToTop()
    {
        await _jsModule.InvokeVoidAsync("ScrollToTop");
    }

    async Task AttachScrollListener()
    {
        //selfReference = DotNetObjectReference.Create(this);
        var minInterval = 500; // Only notify every 500 ms
        await _jsModule.InvokeVoidAsync("onContentPageScroll", minInterval);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

        }
    }

    public void Dispose()
    {

    }

    private async Task OnShowModalClick()
    {
        //await modal?.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        //await modal?.HideAsync();
    }
}
